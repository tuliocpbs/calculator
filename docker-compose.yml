version: "3"

services:
  web:
    build: 
      context: ./web_api
      dockerfile: Dockerfile
    command: gunicorn --chdir web_api -c web_api/gconfig.py src.app:app --reload
    volumes:
      - .:/app
    env_file:
      - ./web_api/env.example
    ports:
      - 5000:80
    depends_on:
      - rabbitmq
    restart: always

  consumer:
    build: 
      context: ./consumer
      dockerfile: Dockerfile
    env_file:
      - ./consumer/env.example
    depends_on:
      - rabbitmq
      - postgres

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  postgres:
    image: postgres
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_DB: calculator
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./consumer/init.sql:/docker-entrypoint-initdb.d/init.sql

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  elasticsearch:
    image: elasticsearch:7.4.0
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.1
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  apm:
    image: docker.elastic.co/apm/apm-server:7.1.1
    ports:
      - 8200:8200
    depends_on:
      - elasticsearch
    volumes:
      - ./web_api/apm-server.yml:/etc/apm-server/apm-server.yml
